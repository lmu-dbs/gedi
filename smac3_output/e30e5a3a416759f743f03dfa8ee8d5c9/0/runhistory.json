{
  "stats": {
    "submitted": 20,
    "finished": 20,
    "running": 0
  },
  "data": [
    [
      1,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.3796601,
      1707413454.382205,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      2,
      null,
      209652396,
      null,
      [
        0.0942237913295394,
        0.2272369825310349
      ],
      0.15013408660888672,
      1,
      1707413454.3836958,
      1707413454.5344589,
      {}
    ],
    [
      3,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.5366552,
      1707413454.5377972,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      4,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.539964,
      1707413454.540999,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      5,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.542984,
      1707413454.543963,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      6,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.8451252,
      1707413454.846237,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      7,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.848487,
      1707413454.8494358,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      8,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.852234,
      1707413454.853305,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      9,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.856153,
      1707413454.857109,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      10,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.860209,
      1707413454.8612092,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      11,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.863563,
      1707413454.8644989,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      12,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.866814,
      1707413454.86775,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      13,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413454.870833,
      1707413454.871839,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      14,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413455.267648,
      1707413455.2687979,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      15,
      null,
      209652396,
      null,
      [
        0.06037654948186555,
        0.017495148270587027
      ],
      0.6890890598297119,
      1,
      1707413455.271683,
      1707413455.961361,
      {}
    ],
    [
      16,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413455.965599,
      1707413455.966742,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      17,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413455.969793,
      1707413455.9708989,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      18,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413455.973919,
      1707413455.974928,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ],
    [
      19,
      null,
      209652396,
      null,
      [
        0.10304285288378401,
        0.5000901681266028
      ],
      0.5555310249328613,
      1,
      1707413455.977928,
      1707413456.53416,
      {}
    ],
    [
      20,
      null,
      209652396,
      null,
      [
        Infinity,
        Infinity
      ],
      0.0,
      2,
      1707413456.537709,
      1707413456.538839,
      {
        "traceback": "Traceback (most recent call last):\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 184, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/smac/runner/target_function_runner.py\", line 257, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/andreamaldonado/git_tree/tag/tag/generator.py\", line 163, in gen_log\n    tree = generate_process_tree(parameters={\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/sim.py\", line 93, in generate_process_tree\n    return algorithm.apply(**kwargs)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/algorithm.py\", line 55, in apply\n    return exec_utils.get_variant(variant).apply(parameters=parameters)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 119, in apply\n    return GeneratedTree(parameters).generate()\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 293, in __init__\n    self.total_activities = int(round(self.draw_random_number_from_distribution()))\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/pm4py/algo/simulation/tree_generator/variants/ptandloggenerator.py\", line 164, in draw_random_number_from_distribution\n    return self.activity_distribution.rvs(1)[0]\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 468, in rvs\n    return self.dist.rvs(*self.args, **kwds)\n  File \"/Users/andreamaldonado/miniconda3/envs/tag/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py\", line 1036, in rvs\n    raise ValueError(message)\nValueError: Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.\n",
        "error": "ValueError('Domain error in arguments. The `scale` parameter must be positive for all distributions, and many distributions have restrictions on shape parameters. Please see the `scipy.stats.triang` documentation for details.')"
      }
    ]
  ],
  "configs": {
    "1": {
      "choice": 0.27420973585918546,
      "duplicate": 0,
      "loop": 0.6243590484932066,
      "lt_dependency": 0.11643280289135872,
      "max": 12,
      "min": 36,
      "mode": 22,
      "num_traces": 965,
      "or": 0,
      "parallel": 0.9968127990048379,
      "sequence": 0.7744139964226633,
      "silent": 0.7162562181800604
    },
    "2": {
      "choice": 0.7636231336928904,
      "duplicate": 0,
      "loop": 0.2753755502961576,
      "lt_dependency": 0.9389623495284468,
      "max": 39,
      "min": 16,
      "mode": 24,
      "num_traces": 266,
      "or": 0,
      "parallel": 0.15723027363419534,
      "sequence": 0.42967240599915385,
      "silent": 0.12256621007807553
    },
    "3": {
      "choice": 0.5534077303763479,
      "duplicate": 0,
      "loop": 0.9441540514025837,
      "lt_dependency": 0.45226944354362786,
      "max": 19,
      "min": 13,
      "mode": 33,
      "num_traces": 769,
      "or": 0,
      "parallel": 0.3117050725314766,
      "sequence": 0.12312715318985283,
      "silent": 0.32291226397268474
    },
    "4": {
      "choice": 0.049488366832956675,
      "duplicate": 0,
      "loop": 0.17938753484748304,
      "lt_dependency": 0.6052992315869778,
      "max": 28,
      "min": 30,
      "mode": 13,
      "num_traces": 463,
      "or": 0,
      "parallel": 0.5948384316079318,
      "sequence": 0.7077719158120453,
      "silent": 0.9818906797654927
    },
    "5": {
      "choice": 0.19955039026215673,
      "duplicate": 0,
      "loop": 0.8314401759952307,
      "lt_dependency": 0.8422806031815707,
      "max": 24,
      "min": 25,
      "mode": 18,
      "num_traces": 616,
      "or": 0,
      "parallel": 0.4870224994421005,
      "sequence": 0.20290152083151042,
      "silent": 0.17355378899723292
    },
    "6": {
      "choice": 0.892855270774259,
      "duplicate": 0,
      "loop": 0.09625800670452529,
      "lt_dependency": 0.7827238845235909,
      "max": 32,
      "min": 29,
      "mode": 9,
      "num_traces": 245,
      "or": 0,
      "parallel": 0.14680112183512767,
      "sequence": 0.47396468963122457,
      "silent": 0.1275404417647016
    },
    "7": {
      "choice": 0.7180374727086953,
      "duplicate": 0,
      "loop": 0.38960710363751994,
      "lt_dependency": 0.8342936470924586,
      "max": 28,
      "min": 25,
      "mode": 20,
      "num_traces": 428,
      "or": 0,
      "parallel": 0.2607586865143843,
      "sequence": 0.37503791895435445,
      "silent": 0.6087970645475955
    },
    "8": {
      "choice": 0.6494351719359895,
      "duplicate": 0,
      "loop": 0.9263406719097345,
      "lt_dependency": 0.8011669785745563,
      "max": 19,
      "min": 27,
      "mode": 29,
      "num_traces": 192,
      "or": 0,
      "parallel": 0.11927138975266208,
      "sequence": 0.10513742381502343,
      "silent": 0.1289945956010372
    },
    "9": {
      "choice": 0.6067357423109274,
      "duplicate": 0,
      "loop": 0.7938077877018379,
      "lt_dependency": 0.780375183440352,
      "max": 10,
      "min": 5,
      "mode": 30,
      "num_traces": 614,
      "or": 0,
      "parallel": 0.47164766512774325,
      "sequence": 0.8227832975494558,
      "silent": 0.7418709436043187
    },
    "10": {
      "choice": 0.5533253688880515,
      "duplicate": 0,
      "loop": 0.964026132896019,
      "lt_dependency": 0.03001621346592246,
      "max": 9,
      "min": 21,
      "mode": 17,
      "num_traces": 384,
      "or": 0,
      "parallel": 0.6565772422107444,
      "sequence": 0.20461653806325297,
      "silent": 0.9769934773084338
    },
    "11": {
      "choice": 0.5494343511669278,
      "duplicate": 0,
      "loop": 0.5336059705553754,
      "lt_dependency": 0.8713120267643509,
      "max": 39,
      "min": 27,
      "mode": 7,
      "num_traces": 495,
      "or": 0,
      "parallel": 0.2519813360815867,
      "sequence": 0.10613026303513065,
      "silent": 0.04879591433177747
    },
    "12": {
      "choice": 0.4432113391500656,
      "duplicate": 0,
      "loop": 0.08032569761590806,
      "lt_dependency": 0.46686456863040254,
      "max": 14,
      "min": 38,
      "mode": 12,
      "num_traces": 288,
      "or": 0,
      "parallel": 0.6597662935706207,
      "sequence": 0.9766948703632617,
      "silent": 0.3031787955469235
    },
    "13": {
      "choice": 0.42941825134551564,
      "duplicate": 0,
      "loop": 0.572364115482993,
      "lt_dependency": 0.9788321588104364,
      "max": 23,
      "min": 27,
      "mode": 29,
      "num_traces": 991,
      "or": 0,
      "parallel": 0.16737988780906454,
      "sequence": 0.8395654584238159,
      "silent": 0.2899788929506455
    },
    "14": {
      "choice": 0.32480334760003626,
      "duplicate": 0,
      "loop": 0.5801870306006175,
      "lt_dependency": 0.5906478054619824,
      "max": 13,
      "min": 30,
      "mode": 31,
      "num_traces": 695,
      "or": 0,
      "parallel": 0.578581996361083,
      "sequence": 0.8081320491556249,
      "silent": 0.17086800532961108
    },
    "15": {
      "choice": 0.272735596030051,
      "duplicate": 0,
      "loop": 0.7191639320773799,
      "lt_dependency": 0.2773078934602432,
      "max": 39,
      "min": 25,
      "mode": 26,
      "num_traces": 369,
      "or": 0,
      "parallel": 0.3738862513474176,
      "sequence": 0.9988585365021878,
      "silent": 0.5734097312284474
    },
    "16": {
      "choice": 0.07350602138529651,
      "duplicate": 0,
      "loop": 0.3253832629268104,
      "lt_dependency": 0.8306506289251895,
      "max": 26,
      "min": 34,
      "mode": 39,
      "num_traces": 657,
      "or": 0,
      "parallel": 0.655582237301672,
      "sequence": 0.10922461843917809,
      "silent": 0.13258178302094709
    },
    "17": {
      "choice": 0.5709354396645094,
      "duplicate": 0,
      "loop": 0.14047988378034826,
      "lt_dependency": 0.6810383714282678,
      "max": 13,
      "min": 36,
      "mode": 20,
      "num_traces": 222,
      "or": 0,
      "parallel": 0.8975811298925523,
      "sequence": 0.7170988865536203,
      "silent": 0.8092457691377606
    },
    "18": {
      "choice": 0.6955473981763196,
      "duplicate": 0,
      "loop": 0.6707362761640449,
      "lt_dependency": 0.014648521430621595,
      "max": 25,
      "min": 19,
      "mode": 28,
      "num_traces": 486,
      "or": 0,
      "parallel": 0.43710425107963424,
      "sequence": 0.9202877876072268,
      "silent": 0.849528147029012
    },
    "19": {
      "choice": 0.4201203645695233,
      "duplicate": 0,
      "loop": 0.930003235600452,
      "lt_dependency": 0.029906470725618618,
      "max": 25,
      "min": 15,
      "mode": 23,
      "num_traces": 361,
      "or": 0,
      "parallel": 0.6566688116585623,
      "sequence": 0.7068496977049626,
      "silent": 0.6194039686410058
    },
    "20": {
      "choice": 0.700454485413118,
      "duplicate": 0,
      "loop": 0.45900725585128815,
      "lt_dependency": 0.7248350434756444,
      "max": 36,
      "min": 40,
      "mode": 35,
      "num_traces": 110,
      "or": 0,
      "parallel": 0.36637828383358023,
      "sequence": 0.7326906567998175,
      "silent": 0.17991338048882613
    }
  },
  "config_origins": {
    "1": "Initial Design: Sobol",
    "2": "Initial Design: Sobol",
    "3": "Initial Design: Sobol",
    "4": "Initial Design: Sobol",
    "5": "Initial Design: Sobol",
    "6": "Acquisition Function Maximizer: Random Search (sorted)",
    "7": "Acquisition Function Maximizer: Random Search (sorted)",
    "8": "Acquisition Function Maximizer: Random Search (sorted)",
    "9": "Acquisition Function Maximizer: Random Search (sorted)",
    "10": "Acquisition Function Maximizer: Random Search (sorted)",
    "11": "Acquisition Function Maximizer: Random Search (sorted)",
    "12": "Acquisition Function Maximizer: Random Search (sorted)",
    "13": "Acquisition Function Maximizer: Random Search (sorted)",
    "14": "Acquisition Function Maximizer: Random Search (sorted)",
    "15": "Acquisition Function Maximizer: Random Search (sorted)",
    "16": "Acquisition Function Maximizer: Random Search (sorted)",
    "17": "Acquisition Function Maximizer: Random Search (sorted)",
    "18": "Acquisition Function Maximizer: Random Search (sorted)",
    "19": "Acquisition Function Maximizer: Random Search (sorted)",
    "20": "Random Search"
  }
}